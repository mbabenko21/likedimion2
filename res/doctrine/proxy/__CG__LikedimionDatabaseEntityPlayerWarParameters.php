<?php

namespace Likedimion\Proxies\__CG__\Likedimion\Database\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PlayerWarParameters extends \Likedimion\Database\Entity\PlayerWarParameters implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'player', 'id', 'pHit', 'mHit', 'pMinDamage', 'mMinDamage', 'pMaxDamage', 'mMaxDamage', 'pDef', 'mDef', 'pShield', 'mShield', 'pBias', 'mBias', 'pCrit', 'mCrit');
        }

        return array('__isInitialized__', 'player', 'id', 'pHit', 'mHit', 'pMinDamage', 'mMinDamage', 'pMaxDamage', 'mMaxDamage', 'pDef', 'mDef', 'pShield', 'mShield', 'pBias', 'mBias', 'pCrit', 'mCrit');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PlayerWarParameters $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPlayer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlayer', array());

        return parent::getPlayer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlayer($player)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlayer', array($player));

        return parent::setPlayer($player);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPHit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPHit', array());

        return parent::getPHit();
    }

    /**
     * {@inheritDoc}
     */
    public function setPHit($pHit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPHit', array($pHit));

        return parent::setPHit($pHit);
    }

    /**
     * {@inheritDoc}
     */
    public function getMHit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMHit', array());

        return parent::getMHit();
    }

    /**
     * {@inheritDoc}
     */
    public function setMHit($mHit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMHit', array($mHit));

        return parent::setMHit($mHit);
    }

    /**
     * {@inheritDoc}
     */
    public function getPMinDamage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPMinDamage', array());

        return parent::getPMinDamage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPMinDamage($pMinDamage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPMinDamage', array($pMinDamage));

        return parent::setPMinDamage($pMinDamage);
    }

    /**
     * {@inheritDoc}
     */
    public function getMMinDamage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMMinDamage', array());

        return parent::getMMinDamage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMMinDamage($mMinDamage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMMinDamage', array($mMinDamage));

        return parent::setMMinDamage($mMinDamage);
    }

    /**
     * {@inheritDoc}
     */
    public function getPMaxDamage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPMaxDamage', array());

        return parent::getPMaxDamage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPMaxDamage($pMaxDamage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPMaxDamage', array($pMaxDamage));

        return parent::setPMaxDamage($pMaxDamage);
    }

    /**
     * {@inheritDoc}
     */
    public function getMMaxDamage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMMaxDamage', array());

        return parent::getMMaxDamage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMMaxDamage($mMaxDamage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMMaxDamage', array($mMaxDamage));

        return parent::setMMaxDamage($mMaxDamage);
    }

    /**
     * {@inheritDoc}
     */
    public function getPDef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPDef', array());

        return parent::getPDef();
    }

    /**
     * {@inheritDoc}
     */
    public function setPDef($pDef)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPDef', array($pDef));

        return parent::setPDef($pDef);
    }

    /**
     * {@inheritDoc}
     */
    public function getMDef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMDef', array());

        return parent::getMDef();
    }

    /**
     * {@inheritDoc}
     */
    public function setMDef($mDef)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMDef', array($mDef));

        return parent::setMDef($mDef);
    }

    /**
     * {@inheritDoc}
     */
    public function getPShield()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPShield', array());

        return parent::getPShield();
    }

    /**
     * {@inheritDoc}
     */
    public function setPShield($pShield)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPShield', array($pShield));

        return parent::setPShield($pShield);
    }

    /**
     * {@inheritDoc}
     */
    public function getMShield()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMShield', array());

        return parent::getMShield();
    }

    /**
     * {@inheritDoc}
     */
    public function setMShield($mShield)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMShield', array($mShield));

        return parent::setMShield($mShield);
    }

    /**
     * {@inheritDoc}
     */
    public function getPBias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPBias', array());

        return parent::getPBias();
    }

    /**
     * {@inheritDoc}
     */
    public function setPBias($pBias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPBias', array($pBias));

        return parent::setPBias($pBias);
    }

    /**
     * {@inheritDoc}
     */
    public function getMBias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMBias', array());

        return parent::getMBias();
    }

    /**
     * {@inheritDoc}
     */
    public function setMBias($mBias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMBias', array($mBias));

        return parent::setMBias($mBias);
    }

    /**
     * {@inheritDoc}
     */
    public function getPCrit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPCrit', array());

        return parent::getPCrit();
    }

    /**
     * {@inheritDoc}
     */
    public function setPCrit($pCrit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPCrit', array($pCrit));

        return parent::setPCrit($pCrit);
    }

    /**
     * {@inheritDoc}
     */
    public function getMCrit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMCrit', array());

        return parent::getMCrit();
    }

    /**
     * {@inheritDoc}
     */
    public function setMCrit($mCrit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMCrit', array($mCrit));

        return parent::setMCrit($mCrit);
    }

}
