<?php

namespace Likedimion\Proxies\__CG__\Likedimion\Database\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PlayerCharParams extends \Likedimion\Database\Entity\PlayerCharParams implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'player', 'id', 'life', 'maxLife', 'mana', 'maxMana', 'isCrim', 'isDead', 'crimStatus', 'status', 'experience', 'needExperience', 'level', 'lastLifeRegenerationTime', 'lastManaRegenerationTime', 'invisible');
        }

        return array('__isInitialized__', 'player', 'id', 'life', 'maxLife', 'mana', 'maxMana', 'isCrim', 'isDead', 'crimStatus', 'status', 'experience', 'needExperience', 'level', 'lastLifeRegenerationTime', 'lastManaRegenerationTime', 'invisible');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PlayerCharParams $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPlayer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlayer', array());

        return parent::getPlayer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlayer($player)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlayer', array($player));

        return parent::setPlayer($player);
    }

    /**
     * {@inheritDoc}
     */
    public function addLvl($count)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLvl', array($count));

        return parent::addLvl($count);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLife()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLife', array());

        return parent::getLife();
    }

    /**
     * {@inheritDoc}
     */
    public function setLife($life)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLife', array($life));

        return parent::setLife($life);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxLife()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxLife', array());

        return parent::getMaxLife();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxLife($maxLife)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxLife', array($maxLife));

        return parent::setMaxLife($maxLife);
    }

    /**
     * {@inheritDoc}
     */
    public function getMana()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMana', array());

        return parent::getMana();
    }

    /**
     * {@inheritDoc}
     */
    public function setMana($mana)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMana', array($mana));

        return parent::setMana($mana);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxMana()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxMana', array());

        return parent::getMaxMana();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxMana($maxMana)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxMana', array($maxMana));

        return parent::setMaxMana($maxMana);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsCrim()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsCrim', array());

        return parent::getIsCrim();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsCrim($isCrim)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsCrim', array($isCrim));

        return parent::setIsCrim($isCrim);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDead', array());

        return parent::getIsDead();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDead($isDead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDead', array($isDead));

        return parent::setIsDead($isDead);
    }

    /**
     * {@inheritDoc}
     */
    public function getCrimStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCrimStatus', array());

        return parent::getCrimStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCrimStatus($crimStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCrimStatus', array($crimStatus));

        return parent::setCrimStatus($crimStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperience', array());

        return parent::getExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperience($experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperience', array($experience));

        return parent::setExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function getNeedExperience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNeedExperience', array());

        return parent::getNeedExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setNeedExperience($needExperience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNeedExperience', array($needExperience));

        return parent::setNeedExperience($needExperience);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', array());

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel($level)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', array($level));

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLifeRegenerationTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLifeRegenerationTime', array());

        return parent::getLastLifeRegenerationTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLifeRegenerationTime($lastLifeRegenerationTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLifeRegenerationTime', array($lastLifeRegenerationTime));

        return parent::setLastLifeRegenerationTime($lastLifeRegenerationTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastManaRegenerationTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastManaRegenerationTime', array());

        return parent::getLastManaRegenerationTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastManaRegenerationTime($lastManaRegenerationTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastManaRegenerationTime', array($lastManaRegenerationTime));

        return parent::setLastManaRegenerationTime($lastManaRegenerationTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvisible', array());

        return parent::getInvisible();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvisible($invisible)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvisible', array($invisible));

        return parent::setInvisible($invisible);
    }

}
